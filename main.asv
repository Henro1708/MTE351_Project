mass = 30;
heigth = 1;
radius_body = 0.25;
radius_wheel = 0.05;

%% MATLAB FLOOR PLAN
L_groove = 0.01;       % groove length [m] (1 cm)
depth = 0.005;         % groove depth [m] (0.5 cm)
tile_size = 1 %0.3048;       % tile length [m]
total_distance = 5.0;  % total distance robot travels [m]
v_robot = 0.10;         % robot speed [m/s] --> define this!
measuring = 1000;

% Generate 1 groove profile (haversine)
dx = linspace(0, L_groove, 100);
z_groove = depth * (1 - cos(2*pi*dx/L_groove))/2;

% Generate 1 flat tile segment
L_flat = tile_size + L_groove;
dx_flat = linspace(0, L_flat, L_flat * measuring);
z_flat = zeros(size(dx_flat));

% Repeat for full path
n_tiles = floor(total_distance / (tile_size));

% initialize path
path = [];

for i = 1:n_tiles
    path = [path, z_flat, z_groove];
end

% Add final flat if needed to reach exact distance
remaining_length = total_distance - n_tiles * (tile_size + L_groove);
if remaining_length > 0
    dx_remaining = linspace(0, remaining_length, 100);
    z_remaining = zeros(size(dx_remaining));
    path = [path, z_remaining];
end

% Compute time vector
total_time = total_distance / v_robot;
t = linspace(0, total_time, length(path));

% Plot
figure
plot(t, path)
xlabel('Time [s]')
ylabel('Vertical Displacement [m]')
title('Vertical Floor Profile Signal')
grid on




